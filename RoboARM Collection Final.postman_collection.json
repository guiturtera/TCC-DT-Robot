{
	"info": {
		"_postman_id": "e8aa98c5-fded-48cc-9d63-34a5bd3fd685",
		"name": "RoboARM Collection Final",
		"description": "Template utilizado para configurar o FIWARE descomplicado para comunicação entre a entidade física e a entidade virtual(digital twin).\n\nSe atente para as variáveis que aponta para o IP e os paths\n\nO passo 1 e 2 servem para análise de conexão e funcionamento do Broker\n\n3 e 3.1 cria o serviço e verifica se o mesmo foi provisionado\n\n4 -> 5 Provisiona o dispositivo IoT e faz as subscrições(no caso para a arquitetura anterior)\n\n6 Configura o path metrics, para as medições de RTT  \n  \nGlossário:\n\nSub -> Subscription\n\nAttr -> Attribute",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "18251203"
	},
	"item": [
		{
			"name": "utils",
			"item": [
				{
					"name": "Obtenha todas as subscrições",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "fiware-service",
								"value": "{{fiware_service}}",
								"type": "text"
							},
							{
								"key": "fiware-servicepath",
								"value": "{{fiware_service_path}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://{{url}}:1026/v2/subscriptions/",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"port": "1026",
							"path": [
								"v2",
								"subscriptions",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Deletar subscrições",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "fiware-service",
								"value": "{{fiware_service}}",
								"type": "text"
							},
							{
								"key": "fiware-servicepath",
								"value": "{{fiware_service_path}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://{{url}}:1026/v2/subscriptions/",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"port": "1026",
							"path": [
								"v2",
								"subscriptions",
								""
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "1- Checa serviço do Orion",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "fiware-service",
						"value": "{{fiware_service}}",
						"type": "text"
					},
					{
						"key": "fiware-servicepath",
						"value": "{{fiware_service_path}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "http://{{url}}:1026/version",
					"protocol": "http",
					"host": [
						"{{url}}"
					],
					"port": "1026",
					"path": [
						"version"
					]
				}
			},
			"response": []
		},
		{
			"name": "2- Checa serviço do IoT Agent",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "fiware-service",
						"value": "{{fiware_service}}",
						"type": "text"
					},
					{
						"key": "fiware-servicepath",
						"value": "{{fiware_service_path}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "http://{{url}}:4041/iot/about",
					"protocol": "http",
					"host": [
						"{{url}}"
					],
					"port": "4041",
					"path": [
						"iot",
						"about"
					]
				}
			},
			"response": []
		},
		{
			"name": "3.0- Criar um serviço no IoT Agent",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "fiware-service",
						"value": "{{fiware_service}}"
					},
					{
						"key": "fiware-servicepath",
						"value": "{{fiware_service_path}}"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"services\": [\n        {\n            \"apikey\": \"TEF\",\n            \"cbroker\": \"http://{{url}}:1026\",\n            \"entity_type\": \"RoboArm\",\n            \"resource\": \"\"\n        }\n    ]\n}"
				},
				"url": {
					"raw": "http://{{url}}:4041/iot/services",
					"protocol": "http",
					"host": [
						"{{url}}"
					],
					"port": "4041",
					"path": [
						"iot",
						"services"
					]
				},
				"description": "Invoking group provision is always the the first step in connecting devices. For MQTT communication, provisioning supplies the authentication key so the IoT Agent will know which **topic** it must\nsubscribe to.\n\nIt is possible to set up default commands and attributes for all devices as well, but this\nis not done within this tutorial as we will be provisioning each device separately.\n\nThis example provisions an anonymous group of devices. It tells the IoT Agent that a series of devices\nwill be communicating by sending messages to the `/4jggokgpepnvsb2uv4s40d59ov` **topic**\n\nThe `resource` attribute is left blank since HTTP communication is not being used."
			},
			"response": []
		},
		{
			"name": "3.1- Verifica serviços provisionados",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "fiware-service",
						"value": "{{fiware_service}}"
					},
					{
						"key": "fiware-servicepath",
						"value": "{{fiware_service_path}}"
					}
				],
				"url": {
					"raw": "http://{{url}}:4041/iot/services",
					"protocol": "http",
					"host": [
						"{{url}}"
					],
					"port": "4041",
					"path": [
						"iot",
						"services"
					]
				},
				"description": "Invoking group provision is always the the first step in connecting devices. For MQTT communication, provisioning supplies the authentication key so the IoT Agent will know which **topic** it must\nsubscribe to.\n\nIt is possible to set up default commands and attributes for all devices as well, but this\nis not done within this tutorial as we will be provisioning each device separately.\n\nThis example provisions an anonymous group of devices. It tells the IoT Agent that a series of devices\nwill be communicating by sending messages to the `/4jggokgpepnvsb2uv4s40d59ov` **topic**\n\nThe `resource` attribute is left blank since HTTP communication is not being used."
			},
			"response": []
		},
		{
			"name": "4.0- Provisiona dispositivo IoT Agent",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "fiware-service",
						"value": "{{fiware_service}}",
						"type": "text"
					},
					{
						"key": "fiware-servicepath",
						"value": "{{fiware_service_path}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"devices\": [\r\n        {\r\n            \"device_id\": \"DeviceRoboArm001\",\r\n            \"entity_name\": \"urn:ngsi-ld:RoboArm:001\",\r\n            \"entity_type\": \"RoboArm\",\r\n            \"protocol\": \"PDI-IoTA-UltraLight\",\r\n            \"transport\": \"MQTT\",\r\n            \"apikey\": \"TEF\",\r\n            \"timezone\": \"America/Sao_Paulo\",\r\n            \"attributes\": [\r\n                {\r\n                    \"object_id\": \"mt1\",\r\n                    \"name\": \"motor1\",\r\n                    \"type\": \"Integer\"\r\n                },\r\n                {\r\n                    \"object_id\": \"mt2\",\r\n                    \"name\": \"motor2\",\r\n                    \"type\": \"Integer\"\r\n                },\r\n                {\r\n                    \"object_id\": \"mt3\",\r\n                    \"name\": \"motor3\",\r\n                    \"type\": \"Integer\"\r\n                },\r\n                {\r\n                    \"object_id\": \"mt4\",\r\n                    \"name\": \"motor4\",\r\n                    \"type\": \"Integer\"\r\n                }\r\n            ],\r\n            \"commands\": [\r\n                {\r\n                    \"name\": \"moveMotor1\",\r\n                    \"type\": \"command\"\r\n                },\r\n                {\r\n                    \"name\": \"moveMotor2\",\r\n                    \"type\": \"command\"\r\n                },\r\n                {\r\n                    \"name\": \"moveMotor3\",\r\n                    \"type\": \"command\"\r\n                },\r\n                {\r\n                    \"name\": \"moveMotor4\",\r\n                    \"type\": \"command\"\r\n                }\r\n            ],\r\n            \"static_attributes\": [\r\n            ]\r\n        }\r\n    ]\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{url}}:4041/iot/devices/",
					"protocol": "http",
					"host": [
						"{{url}}"
					],
					"port": "4041",
					"path": [
						"iot",
						"devices",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "4.1- Verifica device configurado",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "fiware-service",
						"value": "{{fiware_service}}"
					},
					{
						"key": "fiware-servicepath",
						"value": "{{fiware_service_path}}"
					}
				],
				"url": {
					"raw": "http://{{url}}:4041/iot/devices/",
					"protocol": "http",
					"host": [
						"{{url}}"
					],
					"port": "4041",
					"path": [
						"iot",
						"devices",
						""
					]
				},
				"description": "Invoking group provision is always the the first step in connecting devices. For MQTT communication, provisioning supplies the authentication key so the IoT Agent will know which **topic** it must\nsubscribe to.\n\nIt is possible to set up default commands and attributes for all devices as well, but this\nis not done within this tutorial as we will be provisioning each device separately.\n\nThis example provisions an anonymous group of devices. It tells the IoT Agent that a series of devices\nwill be communicating by sending messages to the `/4jggokgpepnvsb2uv4s40d59ov` **topic**\n\nThe `resource` attribute is left blank since HTTP communication is not being used."
			},
			"response": []
		},
		{
			"name": "4.2- Verifica entidade no orion",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "fiware-service",
						"value": "{{fiware_service}}"
					},
					{
						"key": "fiware-servicepath",
						"value": "{{fiware_service_path}}"
					}
				],
				"url": {
					"raw": "http://{{url}}:1026/v2/entities/urn:ngsi-ld:RoboArm:001/attrs",
					"protocol": "http",
					"host": [
						"{{url}}"
					],
					"port": "1026",
					"path": [
						"v2",
						"entities",
						"urn:ngsi-ld:RoboArm:001",
						"attrs"
					]
				},
				"description": "Invoking group provision is always the the first step in connecting devices. For MQTT communication, provisioning supplies the authentication key so the IoT Agent will know which **topic** it must\nsubscribe to.\n\nIt is possible to set up default commands and attributes for all devices as well, but this\nis not done within this tutorial as we will be provisioning each device separately.\n\nThis example provisions an anonymous group of devices. It tells the IoT Agent that a series of devices\nwill be communicating by sending messages to the `/4jggokgpepnvsb2uv4s40d59ov` **topic**\n\nThe `resource` attribute is left blank since HTTP communication is not being used."
			},
			"response": []
		},
		{
			"name": "4.3- Envia comando via orion",
			"request": {
				"method": "PATCH",
				"header": [
					{
						"key": "fiware-service",
						"value": "{{fiware_service}}"
					},
					{
						"key": "fiware-servicepath",
						"value": "{{fiware_service_path}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"moveMotor1\": {\n      \"type\" : \"command\",\n      \"value\" : \"200\"\n  }\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{url}}:1026/v2/entities/urn:ngsi-ld:RoboArm:001/attrs?type=RoboArm",
					"protocol": "http",
					"host": [
						"{{url}}"
					],
					"port": "1026",
					"path": [
						"v2",
						"entities",
						"urn:ngsi-ld:RoboArm:001",
						"attrs"
					],
					"query": [
						{
							"key": "type",
							"value": "RoboArm"
						}
					]
				},
				"description": "Invoking group provision is always the the first step in connecting devices. For MQTT communication, provisioning supplies the authentication key so the IoT Agent will know which **topic** it must\nsubscribe to.\n\nIt is possible to set up default commands and attributes for all devices as well, but this\nis not done within this tutorial as we will be provisioning each device separately.\n\nThis example provisions an anonymous group of devices. It tells the IoT Agent that a series of devices\nwill be communicating by sending messages to the `/4jggokgpepnvsb2uv4s40d59ov` **topic**\n\nThe `resource` attribute is left blank since HTTP communication is not being used."
			},
			"response": []
		},
		{
			"name": "4.4- Altera atributos do motor",
			"request": {
				"method": "PATCH",
				"header": [
					{
						"key": "fiware-service",
						"value": "{{fiware_service}}"
					},
					{
						"key": "fiware-servicepath",
						"value": "{{fiware_service_path}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"tempo1\": {\n      \"type\" : \"string\",\n      \"value\": \"129398213_129398423\"\n  }\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{url}}:1026/v2/entities/urn:ngsi-ld:metrics:001/attrs?type=Metric",
					"protocol": "http",
					"host": [
						"{{url}}"
					],
					"port": "1026",
					"path": [
						"v2",
						"entities",
						"urn:ngsi-ld:metrics:001",
						"attrs"
					],
					"query": [
						{
							"key": "type",
							"value": "Metric"
						}
					]
				},
				"description": "Invoking group provision is always the the first step in connecting devices. For MQTT communication, provisioning supplies the authentication key so the IoT Agent will know which **topic** it must\nsubscribe to.\n\nIt is possible to set up default commands and attributes for all devices as well, but this\nis not done within this tutorial as we will be provisioning each device separately.\n\nThis example provisions an anonymous group of devices. It tells the IoT Agent that a series of devices\nwill be communicating by sending messages to the `/4jggokgpepnvsb2uv4s40d59ov` **topic**\n\nThe `resource` attribute is left blank since HTTP communication is not being used."
			},
			"response": []
		},
		{
			"name": "5.0- Sub Attr Motor 1",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "fiware-service",
						"value": "{{fiware_service}}",
						"type": "text"
					},
					{
						"key": "fiware-servicepath",
						"value": "{{fiware_service_path}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"description\": \"Envia dados para o Broker MQTT, para o Unity receber os parâmetros do motor 1\",\r\n    \"subject\": {\r\n        \"entities\": [\r\n            {\r\n                \"id\": \"urn:ngsi-ld:RoboArm:001\",\r\n                \"type\": \"RoboArm\"\r\n            }\r\n        ],\r\n        \"condition\": {\r\n            \"attrs\": [\r\n                \"motor1\"\r\n            ]\r\n        }\r\n    },\r\n    \"notification\": {\r\n        \"mqtt\": {\r\n            \"url\": \"mqtt://{{url}}:1883\",\r\n            \"topic\": \"/TEF/DeviceRoboArm001/attrsChanged\",\r\n            \"qos\": 1,\r\n            \"retain\": false\r\n        },\r\n        \"attrs\": [\r\n            \"motor1\"\r\n        ],\r\n        \"attrsFormat\": \"keyValues\"\r\n    }\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{url}}:1026/v2/subscriptions/",
					"protocol": "http",
					"host": [
						"{{url}}"
					],
					"port": "1026",
					"path": [
						"v2",
						"subscriptions",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "5.1- Sub Status Motor 1",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "fiware-service",
						"value": "{{fiware_service}}",
						"type": "text"
					},
					{
						"key": "fiware-servicepath",
						"value": "{{fiware_service_path}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"description\": \"Envia dados para o Broker MQTT, para o Unity receber os parâmetros do motor 1\",\r\n    \"subject\": {\r\n        \"entities\": [\r\n            {\r\n                \"id\": \"urn:ngsi-ld:RoboArm:001\",\r\n                \"type\": \"RoboArm\"\r\n            }\r\n        ],\r\n        \"condition\": {\r\n            \"attrs\": [\r\n                \"moveMotor1_info\"\r\n            ]\r\n        }\r\n    },\r\n    \"notification\": {\r\n        \"mqtt\": {\r\n            \"url\": \"mqtt://{{url}}:1883\",\r\n            \"topic\": \"/TEF/DeviceRoboArm001/cmdExecuted\",\r\n            \"qos\": 1,\r\n            \"retain\": false\r\n        },\r\n        \"attrs\": [\r\n            \"moveMotor1_info\"\r\n        ],\r\n        \"attrsFormat\": \"keyValues\"\r\n    }\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{url}}:1026/v2/subscriptions/",
					"protocol": "http",
					"host": [
						"{{url}}"
					],
					"port": "1026",
					"path": [
						"v2",
						"subscriptions",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "5.2- Sub Attr Motor 2",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "fiware-service",
						"value": "{{fiware_service}}",
						"type": "text"
					},
					{
						"key": "fiware-servicepath",
						"value": "{{fiware_service_path}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"description\": \"Envia dados para o Broker MQTT, para o Unity receber os parâmetros do motor 2\",\r\n    \"subject\": {\r\n        \"entities\": [\r\n            {\r\n                \"id\": \"urn:ngsi-ld:RoboArm:001\",\r\n                \"type\": \"RoboArm\"\r\n            }\r\n        ],\r\n        \"condition\": {\r\n            \"attrs\": [\r\n                \"motor2\"\r\n            ]\r\n        }\r\n    },\r\n    \"notification\": {\r\n        \"mqtt\": {\r\n            \"url\": \"mqtt://{{url}}:1883\",\r\n            \"topic\": \"/TEF/DeviceRoboArm001/attrsChanged\",\r\n            \"qos\": 1,\r\n            \"retain\": false\r\n        },\r\n        \"attrs\": [\r\n            \"motor2\"\r\n        ],\r\n        \"attrsFormat\": \"keyValues\"\r\n    }\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{url}}:1026/v2/subscriptions/",
					"protocol": "http",
					"host": [
						"{{url}}"
					],
					"port": "1026",
					"path": [
						"v2",
						"subscriptions",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "5.3- Sub Status Motor 2",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "fiware-service",
						"value": "{{fiware_service}}",
						"type": "text"
					},
					{
						"key": "fiware-servicepath",
						"value": "{{fiware_service_path}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"description\": \"Envia dados para o Broker MQTT, para o Unity receber os parâmetros do motor 2\",\r\n    \"subject\": {\r\n        \"entities\": [\r\n            {\r\n                \"id\": \"urn:ngsi-ld:RoboArm:001\",\r\n                \"type\": \"RoboArm\"\r\n            }\r\n        ],\r\n        \"condition\": {\r\n            \"attrs\": [\r\n                \"moveMotor2_info\"\r\n            ]\r\n        }\r\n    },\r\n    \"notification\": {\r\n        \"mqtt\": {\r\n            \"url\": \"mqtt://{{url}}:1883\",\r\n            \"topic\": \"/TEF/DeviceRoboArm001/cmdExecuted\",\r\n            \"qos\": 1,\r\n            \"retain\": false\r\n        },\r\n        \"attrs\": [\r\n            \"moveMotor2_info\"\r\n        ],\r\n        \"attrsFormat\": \"keyValues\"\r\n    }\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{url}}:1026/v2/subscriptions/",
					"protocol": "http",
					"host": [
						"{{url}}"
					],
					"port": "1026",
					"path": [
						"v2",
						"subscriptions",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "5.4- Sub Attr Motor 3",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "fiware-service",
						"value": "{{fiware_service}}",
						"type": "text"
					},
					{
						"key": "fiware-servicepath",
						"value": "{{fiware_service_path}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"description\": \"Envia dados para o Broker MQTT, para o Unity receber os parâmetros do motor 1\",\r\n    \"subject\": {\r\n        \"entities\": [\r\n            {\r\n                \"id\": \"urn:ngsi-ld:RoboArm:001\",\r\n                \"type\": \"RoboArm\"\r\n            }\r\n        ],\r\n        \"condition\": {\r\n            \"attrs\": [\r\n                \"motor3\"\r\n            ]\r\n        }\r\n    },\r\n    \"notification\": {\r\n        \"mqtt\": {\r\n            \"url\": \"mqtt://{{url}}:1883\",\r\n            \"topic\": \"/TEF/DeviceRoboArm001/attrsChanged\",\r\n            \"qos\": 1,\r\n            \"retain\": false\r\n        },\r\n        \"attrs\": [\r\n            \"motor3\"\r\n        ],\r\n        \"attrsFormat\": \"keyValues\"\r\n    }\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{url}}:1026/v2/subscriptions/",
					"protocol": "http",
					"host": [
						"{{url}}"
					],
					"port": "1026",
					"path": [
						"v2",
						"subscriptions",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "5.5- Sub Status Motor 3",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "fiware-service",
						"value": "{{fiware_service}}",
						"type": "text"
					},
					{
						"key": "fiware-servicepath",
						"value": "{{fiware_service_path}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"description\": \"Envia dados para o Broker MQTT, para o Unity receber os parâmetros do motor 1\",\r\n    \"subject\": {\r\n        \"entities\": [\r\n            {\r\n                \"id\": \"urn:ngsi-ld:RoboArm:001\",\r\n                \"type\": \"RoboArm\"\r\n            }\r\n        ],\r\n        \"condition\": {\r\n            \"attrs\": [\r\n                \"moveMotor3_info\"\r\n            ]\r\n        }\r\n    },\r\n    \"notification\": {\r\n        \"mqtt\": {\r\n            \"url\": \"mqtt://{{url}}:1883\",\r\n            \"topic\": \"/TEF/DeviceRoboArm001/cmdExecuted\",\r\n            \"qos\": 1,\r\n            \"retain\": false\r\n        },\r\n        \"attrs\": [\r\n            \"moveMotor3_info\"\r\n        ],\r\n        \"attrsFormat\": \"keyValues\"\r\n    }\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{url}}:1026/v2/subscriptions/",
					"protocol": "http",
					"host": [
						"{{url}}"
					],
					"port": "1026",
					"path": [
						"v2",
						"subscriptions",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "5.6- Sub Attr Motor 4",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "fiware-service",
						"value": "{{fiware_service}}",
						"type": "text"
					},
					{
						"key": "fiware-servicepath",
						"value": "{{fiware_service_path}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"description\": \"Envia dados para o Broker MQTT, para o Unity receber os parâmetros do motor 1\",\r\n    \"subject\": {\r\n        \"entities\": [\r\n            {\r\n                \"id\": \"urn:ngsi-ld:RoboArm:001\",\r\n                \"type\": \"RoboArm\"\r\n            }\r\n        ],\r\n        \"condition\": {\r\n            \"attrs\": [\r\n                \"motor4\"\r\n            ]\r\n        }\r\n    },\r\n    \"notification\": {\r\n        \"mqtt\": {\r\n            \"url\": \"mqtt://{{url}}:1883\",\r\n            \"topic\": \"/TEF/DeviceRoboArm001/attrsChanged\",\r\n            \"qos\": 1,\r\n            \"retain\": false\r\n        },\r\n        \"attrs\": [\r\n            \"motor4\"\r\n        ],\r\n        \"attrsFormat\": \"keyValues\"\r\n    }\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{url}}:1026/v2/subscriptions/",
					"protocol": "http",
					"host": [
						"{{url}}"
					],
					"port": "1026",
					"path": [
						"v2",
						"subscriptions",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "5.7- Sub Status Motor 4",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "fiware-service",
						"value": "{{fiware_service}}",
						"type": "text"
					},
					{
						"key": "fiware-servicepath",
						"value": "{{fiware_service_path}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"description\": \"Envia dados para o Broker MQTT, para o Unity receber os parâmetros do motor 1\",\r\n    \"subject\": {\r\n        \"entities\": [\r\n            {\r\n                \"id\": \"urn:ngsi-ld:RoboArm:001\",\r\n                \"type\": \"RoboArm\"\r\n            }\r\n        ],\r\n        \"condition\": {\r\n            \"attrs\": [\r\n                \"moveMotor4_info\"\r\n            ]\r\n        }\r\n    },\r\n    \"notification\": {\r\n        \"mqtt\": {\r\n            \"url\": \"mqtt://{{url}}:1883\",\r\n            \"topic\": \"/TEF/DeviceRoboArm001/cmdExecuted\",\r\n            \"qos\": 1,\r\n            \"retain\": false\r\n        },\r\n        \"attrs\": [\r\n            \"moveMotor4_info\"\r\n        ],\r\n        \"attrsFormat\": \"keyValues\"\r\n    }\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{url}}:1026/v2/subscriptions/",
					"protocol": "http",
					"host": [
						"{{url}}"
					],
					"port": "1026",
					"path": [
						"v2",
						"subscriptions",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "6 - Metrics (plus)",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "fiware-service",
						"value": "{{fiware_service}}",
						"type": "text"
					},
					{
						"key": "fiware-servicepath",
						"value": "{{fiware_service_path}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"devices\": [\r\n        {\r\n            \"device_id\": \"metrics\",\r\n            \"entity_name\": \"urn:ngsi-ld:metrics:001\",\r\n            \"entity_type\": \"Metric\",\r\n            \"protocol\": \"PDI-IoTA-UltraLight\",\r\n            \"transport\": \"MQTT\",\r\n            \"apikey\": \"TEF\",\r\n            \"timezone\": \"America/Sao_Paulo\",\r\n            \"attributes\": [\r\n                {\r\n                    \"object_id\": \"t1\",\r\n                    \"name\": \"tempo1\",\r\n                    \"type\": \"String\"\r\n                }\r\n            ],\r\n            \"commands\": [],\r\n            \"static_attributes\": []\r\n        }\r\n    ]\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{url}}:4041/iot/devices/",
					"protocol": "http",
					"host": [
						"{{url}}"
					],
					"port": "4041",
					"path": [
						"iot",
						"devices",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "6.1 - Metrics STH-Comet (plus))",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "fiware-service",
						"value": "{{fiware_service}}",
						"type": "text"
					},
					{
						"key": "fiware-servicepath",
						"value": "{{fiware_service_path}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"description\": \"Notify STH-Comet of all Motion Sensor count changes\", // Descrição da notificação\r\n  \"subject\": {\r\n    \"entities\": [\r\n      {\r\n        \"id\": \"urn:ngsi-ld:metrics:001\",\r\n        \"type\": \"Metric\"\r\n      }\r\n    ],\r\n    \"condition\": { \"attrs\": [\"tempo1\"] } // Condição para acionar a notificação (alteração de luminosidade)\r\n  },\r\n  \"notification\": {\r\n    \"http\": {\r\n      \"url\": \"http://{{url}}:8666/notify\" // URL para notificação do STH-Comet\r\n    },\r\n    \"attrs\": [\r\n      \"tempo1\" // Atributo a ser notificado (luminosidade)\r\n    ],\r\n    \"attrsFormat\": \"legacy\" // Formato dos atributos a ser notificado (legado)\r\n  }\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{url}}:1026/v2/subscriptions",
					"protocol": "http",
					"host": [
						"{{url}}"
					],
					"port": "1026",
					"path": [
						"v2",
						"subscriptions"
					]
				}
			},
			"response": []
		},
		{
			"name": "6.2- Verifica device configurado (plus)",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "fiware-service",
						"value": "{{fiware_service}}"
					},
					{
						"key": "fiware-servicepath",
						"value": "{{fiware_service_path}}"
					}
				],
				"url": {
					"raw": "http://{{url}}:8666/STH/v1/contextEntities/type/Metric/id/urn:ngsi-ld:metrics:001/attributes/tempo1?lastN=30",
					"protocol": "http",
					"host": [
						"{{url}}"
					],
					"port": "8666",
					"path": [
						"STH",
						"v1",
						"contextEntities",
						"type",
						"Metric",
						"id",
						"urn:ngsi-ld:metrics:001",
						"attributes",
						"tempo1"
					],
					"query": [
						{
							"key": "lastN",
							"value": "30"
						}
					]
				},
				"description": "Invoking group provision is always the the first step in connecting devices. For MQTT communication, provisioning supplies the authentication key so the IoT Agent will know which **topic** it must\nsubscribe to.\n\nIt is possible to set up default commands and attributes for all devices as well, but this\nis not done within this tutorial as we will be provisioning each device separately.\n\nThis example provisions an anonymous group of devices. It tells the IoT Agent that a series of devices\nwill be communicating by sending messages to the `/4jggokgpepnvsb2uv4s40d59ov` **topic**\n\nThe `resource` attribute is left blank since HTTP communication is not being used."
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "url",
			"value": "00.000.00.000",
			"type": "string"
		},
		{
			"key": "fiware_service",
			"value": "",
			"type": "string"
		},
		{
			"key": "fiware_service_path",
			"value": "",
			"type": "string"
		}
	]
}
