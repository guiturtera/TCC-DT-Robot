{
	"info": {
		"_postman_id": "8c1a2ffa-54e3-43ac-a62d-d70e6c5fbfe4",
		"name": "TCC Collection",
		"description": "## Descrição\n\nEsta coleção de requisições Postman foi criada para facilitar a integração com o Orion Context Broker, uma plataforma de gerenciamento de dados contextuais, usando a API RESTful disponibilizada pelo Orion.\n\nAs requisições nesta coleção abrangem várias etapas do processo, desde a criação de serviços e provisionamento de dispositivos até a subscrição de atributos específicos e envio de comandos utilizando o Orion Context Broker e MQTT.\n\n## Requisições Disponíveis\n\n1. **Criar um Serviço Copy:**\n    - Cria um serviço no Orion Context Broker para comunicação com dispositivos.\n2. **Provisionar um Dispositivo:**\n    - Registra um novo dispositivo no Orion Context Broker com atributos e comandos específicos.\n3. **Obter Dados do Dispositivo:**\n    - Obtém informações sobre um dispositivo específico registrado no Orion Context Broker.\n4. **Obter Entidade:**\n    - Recupera informações sobre uma entidade específica no Orion Context Broker.\n5. **Obter Atributos da Entidade:**\n    - Obtém os atributos de uma entidade específica no Orion Context Broker.\n6. **Subscrever-se às Mudanças do Motor1:**\n    - Cria uma subscrição para receber notificações sobre mudanças no atributo `motor1` do dispositivo.\n7. **Subscrever-se às Mudanças do Motor2:**\n    - Cria uma subscrição para receber notificações sobre mudanças no atributo `motor2` do dispositivo.\n8. **Subscrever-se às Mudanças do Motor3:**\n    - Cria uma subscrição para receber notificações sobre mudanças no atributo `motor3` do dispositivo.\n9. **Subscrever-se às Mudanças do Motor4:**\n    - Cria uma subscrição para receber notificações sobre mudanças no atributo `motor4` do dispositivo.\n10. **Enviar Comando Switch pelo Orion Context Broker:**\n    - Envia um comando para definir os valores dos atributos",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "19683788"
	},
	"item": [
		{
			"name": "Criar um serviço",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "fiware-service",
						"value": "smart"
					},
					{
						"key": "fiware-servicepath",
						"value": "/"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"services\": [\n        {\n            \"apikey\": \"TEF\",\n            \"cbroker\": \"http://{{url}}:1026\",\n            \"entity_type\": \"RoboArm\",\n            \"resource\": \"\"\n        }\n    ]\n}"
				},
				"url": {
					"raw": "http://{{url}}:4041/iot/services",
					"protocol": "http",
					"host": [
						"{{url}}"
					],
					"port": "4041",
					"path": [
						"iot",
						"services"
					]
				},
				"description": "Invoking group provision is always the the first step in connecting devices. For MQTT communication, provisioning supplies the authentication key so the IoT Agent will know which **topic** it must\nsubscribe to.\n\nIt is possible to set up default commands and attributes for all devices as well, but this\nis not done within this tutorial as we will be provisioning each device separately.\n\nThis example provisions an anonymous group of devices. It tells the IoT Agent that a series of devices\nwill be communicating by sending messages to the `/4jggokgpepnvsb2uv4s40d59ov` **topic**\n\nThe `resource` attribute is left blank since HTTP communication is not being used."
			},
			"response": []
		},
		{
			"name": "Provisionar um dispositivo",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "fiware-service",
						"value": "smart",
						"type": "text"
					},
					{
						"key": "fiware-servicepath",
						"value": "/",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"devices\": [\r\n        {\r\n            \"device_id\": \"DeviceRoboArm001\",\r\n            \"entity_name\": \"urn:ngsi-ld:RoboArm:001\",\r\n            \"entity_type\": \"RoboArm\",\r\n            \"protocol\": \"PDI-IoTA-UltraLight\",\r\n            \"transport\": \"MQTT\",\r\n            \"timezone\":    \"America/Sao_Paulo\",\r\n            \"attributes\": [\r\n                {\r\n                    \"object_id\": \"mt1\",\r\n                    \"name\": \"motor1\",\r\n                    \"type\": \"Integer\"\r\n                },\r\n                {\r\n                    \"object_id\": \"mt2\",\r\n                    \"name\": \"motor2\",\r\n                    \"type\": \"Integer\"\r\n                },\r\n                {\r\n                    \"object_id\": \"mt3\",\r\n                    \"name\": \"motor3\",\r\n                    \"type\": \"Integer\"\r\n                },\r\n                {\r\n                    \"object_id\": \"mt4\",\r\n                    \"name\": \"motor4\",\r\n                    \"type\": \"Integer\"\r\n                },\r\n                {\r\n                    \"object_id\": \"ld\",\r\n                    \"name\": \"lastDevice\",\r\n                    \"type\": \"Text\"\r\n                }\r\n            ],\r\n            \"commands\": [\r\n                {\r\n                    \"name\": \"moveMotor1\",\r\n                    \"type\": \"command\"\r\n                },\r\n                {\r\n                    \"name\": \"moveMotor2\",\r\n                    \"type\": \"command\"\r\n                },\r\n                {\r\n                    \"name\": \"moveMotor3\",\r\n                    \"type\": \"command\"\r\n                },\r\n                {\r\n                    \"name\": \"moveMotor4\",\r\n                    \"type\": \"command\"\r\n                }\r\n            ],\r\n            \"static_attributes\": [\r\n            ]\r\n        }\r\n    ]\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{url}}:4041/iot/devices",
					"protocol": "http",
					"host": [
						"{{url}}"
					],
					"port": "4041",
					"path": [
						"iot",
						"devices"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get device",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "fiware-service",
						"value": "smart",
						"type": "text"
					},
					{
						"key": "fiware-servicepath",
						"value": "/",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{url}}:4041/iot/devices/DeviceRoboArm001",
					"protocol": "http",
					"host": [
						"{{url}}"
					],
					"port": "4041",
					"path": [
						"iot",
						"devices",
						"DeviceRoboArm001"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get  entity",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					},
					{
						"key": "fiware-service",
						"type": "text",
						"value": "smart"
					},
					{
						"key": "fiware-servicepath",
						"type": "text",
						"value": "/"
					}
				],
				"url": {
					"raw": "http://{{url}}:1026/v2/entities/urn:ngsi-ld:RoboArm:001",
					"protocol": "http",
					"host": [
						"{{url}}"
					],
					"port": "1026",
					"path": [
						"v2",
						"entities",
						"urn:ngsi-ld:RoboArm:001"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get entity attrs",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					},
					{
						"key": "fiware-service",
						"type": "text",
						"value": "smart"
					},
					{
						"key": "fiware-servicepath",
						"type": "text",
						"value": "/"
					}
				],
				"url": {
					"raw": "http://{{url}}:1026/v2/entities/urn:ngsi-ld:RoboArm:001/attrs",
					"protocol": "http",
					"host": [
						"{{url}}"
					],
					"port": "1026",
					"path": [
						"v2",
						"entities",
						"urn:ngsi-ld:RoboArm:001",
						"attrs"
					]
				}
			},
			"response": []
		},
		{
			"name": "Subscribe Motor1",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "fiware-service",
						"value": "smart",
						"type": "text"
					},
					{
						"key": "fiware-servicepath",
						"value": "/",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"description\": \"Notify STH-Comet of all servomotors angle changes\",\r\n    \"subject\": {\r\n        \"entities\": [\r\n            {\r\n                \"id\": \"urn:ngsi-ld:RoboArm:001\",\r\n                \"type\": \"RoboArm\"\r\n            }\r\n        ],\r\n        \"condition\": {\r\n            \"attrs\": [\r\n                \"motor1\"\r\n            ]\r\n        }\r\n    },\r\n    \"notification\": {\r\n        \"mqtt\": {\r\n            \"url\": \"mqtt://52.149.214.24:1883\",\r\n            \"topic\": \"/TEF/DeviceRoboArm001/cmd\",\r\n            \"qos\": 1,\r\n            \"retain\": false\r\n        },\r\n        \"attrs\": [\r\n            \"motor1\",\r\n            \"lastDevice\"\r\n        ],\r\n        \"attrsFormat\": \"keyValues\"\r\n    }\r\n}"
				},
				"url": {
					"raw": "http://{{url}}:1026/v2/subscriptions/",
					"protocol": "http",
					"host": [
						"{{url}}"
					],
					"port": "1026",
					"path": [
						"v2",
						"subscriptions",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Subscribe Motor2",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "fiware-service",
						"value": "smart",
						"type": "text"
					},
					{
						"key": "fiware-servicepath",
						"value": "/",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"description\": \"Notify STH-Comet of all servomotors angle changes\",\r\n  \"subject\": {\r\n    \"entities\": [\r\n      {\r\n        \"id\": \"urn:ngsi-ld:RoboArm:001\",\r\n        \"type\": \"RoboArm\"\r\n      }\r\n    ],\r\n    \"condition\": {\r\n      \"attrs\": [\"motor2\"]\r\n    }\r\n  },\r\n  \"notification\": {\r\n    \"mqtt\": {\r\n      \"url\": \"mqtt://52.149.214.24:1883\",\r\n      \"topic\": \"/TEF/DeviceRoboArm001/cmd\",\r\n      \"qos\": 1,\r\n      \"retain\": false\r\n    },\r\n    \"attrs\": [\"motor2\", \"lastDevice\"],\r\n    \"attrsFormat\": \"keyValues\"\r\n  }\r\n}"
				},
				"url": {
					"raw": "http://{{url}}:1026/v2/subscriptions",
					"protocol": "http",
					"host": [
						"{{url}}"
					],
					"port": "1026",
					"path": [
						"v2",
						"subscriptions"
					]
				}
			},
			"response": []
		},
		{
			"name": "Subscribe Motor3",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "fiware-service",
						"value": "smart",
						"type": "text"
					},
					{
						"key": "fiware-servicepath",
						"value": "/",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"description\": \"Notify STH-Comet of all servomotors angle changes\",\r\n  \"subject\": {\r\n    \"entities\": [\r\n      {\r\n        \"id\": \"urn:ngsi-ld:RoboArm:001\",\r\n        \"type\": \"RoboArm\"\r\n      }\r\n    ],\r\n    \"condition\": {\r\n      \"attrs\": [\"motor3\"]\r\n    }\r\n  },\r\n  \"notification\": {\r\n    \"mqtt\": {\r\n      \"url\": \"mqtt://52.149.214.24:1883\",\r\n      \"topic\": \"/TEF/DeviceRoboArm001/cmd\",\r\n      \"qos\": 1,\r\n      \"retain\": false\r\n    },\r\n    \"attrs\": [\"motor3\", \"lastDevice\"],\r\n    \"attrsFormat\": \"keyValues\"\r\n  }\r\n}"
				},
				"url": {
					"raw": "http://{{url}}:1026/v2/subscriptions",
					"protocol": "http",
					"host": [
						"{{url}}"
					],
					"port": "1026",
					"path": [
						"v2",
						"subscriptions"
					]
				}
			},
			"response": []
		},
		{
			"name": "Subscribe Motor4",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "fiware-service",
						"value": "smart",
						"type": "text"
					},
					{
						"key": "fiware-servicepath",
						"value": "/",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"description\": \"Notify STH-Comet of all servomotors angle changes\",\r\n  \"subject\": {\r\n    \"entities\": [\r\n      {\r\n        \"id\": \"urn:ngsi-ld:RoboArm:001\",\r\n        \"type\": \"RoboArm\"\r\n      }\r\n    ],\r\n    \"condition\": {\r\n      \"attrs\": [\"motor4\"]\r\n    }\r\n  },\r\n  \"notification\": {\r\n    \"mqtt\": {\r\n      \"url\": \"mqtt://52.149.214.24:1883\",\r\n      \"topic\": \"/TEF/DeviceRoboArm001/cmd\",\r\n      \"qos\": 1,\r\n      \"retain\": false\r\n    },\r\n    \"attrs\": [\"motor4\", \"lastDevice\"],\r\n    \"attrsFormat\": \"keyValues\"\r\n  }\r\n}"
				},
				"url": {
					"raw": "http://{{url}}:1026/v2/subscriptions",
					"protocol": "http",
					"host": [
						"{{url}}"
					],
					"port": "1026",
					"path": [
						"v2",
						"subscriptions"
					]
				}
			},
			"response": []
		},
		{
			"name": "Enviar comando Switch pelo Orion Context Broker",
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"content-type": true
				}
			},
			"request": {
				"method": "PATCH",
				"header": [
					{
						"key": "fiware-service",
						"value": "smart",
						"type": "text"
					},
					{
						"key": "fiware-servicepath",
						"value": "/",
						"type": "text"
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"motor3\": {\r\n        \"type\": \"Integer\",\r\n        \"value\": 90\r\n    },\r\n    \"motor4\": {\r\n        \"type\": \"Integer\",\r\n        \"value\": 90\r\n    }\r\n}"
				},
				"url": {
					"raw": "http://{{url}}:1026/v2/entities/urn:ngsi-ld:RoboArm:001/attrs",
					"protocol": "http",
					"host": [
						"{{url}}"
					],
					"port": "1026",
					"path": [
						"v2",
						"entities",
						"urn:ngsi-ld:RoboArm:001",
						"attrs"
					]
				}
			},
			"response": []
		}
	],
	"variable": [
		{
			"key": "url",
			"value": "52.149.214.24"
		}
	]
}